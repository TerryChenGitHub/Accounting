@model Accounting.Models.ViewModels.AccountViewModel

@{
    ViewBag.Title = "我的記帳本";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <link rel="stylesheet" href="http://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
        <script src="~/Scripts/jquery.validate.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
        <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

        <script type="text/javascript">
            $(function () {
                $("#date").datepicker({
                    altFormat: "yy-mm-dd",
                    dateFormat: "yy-mm-dd",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: '1900:' + new Date().getFullYear(),
                    //以下為清空月曆控制項內容後，所需的屬性與事件。
                    showButtonPanel: true,
                    closeText: '清除', // Text to show for "close" button
                    onClose: function () {
                        var event = arguments.callee.caller.caller.arguments[0];
                        // If "Clear" gets clicked, then really clear it
                        if ($(event.delegateTarget).hasClass('ui-datepicker-close')) {
                            $(this).val('');
                            //注意:在清空內容後，若要執行change事件，需要自行指定。
                            $(this).change();
                        }
                    }
                }).attr('readOnly', 'true');

                //  $('#btnWait').hide();
            });

            //function OnBegin(response) {
            //    $('#btnSubmit').hide();
            //    $('#btnWait').hide();
            //}

            //function OnSuccess(response) {
            //    $('#btnSubmit').show();
            //    $("#AjaxForm")[0].reset();
            //}

            //function OnFailure(response) {
            //   $.validator.unobtrusive.parse($(response))
            //   alert("Error occured.");
            //}

            //function OnComplete(response) {
            //    $('#btnSubmit').show();
            //}
        </script>
    }


     @using (Html.BeginForm())
      {

        @*改寫片段更新下方 List*@
        @*@using (Ajax.BeginForm("Index", routeValues: new { controller = "Account" },
                                       ajaxOptions: new AjaxOptions()
                                       {
                                          HttpMethod = "POST",
                                          OnBegin = "OnBegin",
                                          OnSuccess = "OnSuccess",
                                          OnFailure = "OnFailure",
                                          OnComplete = "OnComplete",
                                          LoadingElementId = "btnWait",
                                          UpdateTargetId = "divlistdata",
                                      },
                                      htmlAttributes: new
                                      {
                                          id = "AjaxForm",
                                          @class = "form-horizontal"
                                      }))
        {*@

        @Html.AntiForgeryToken()
          <div class="well">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)

                @Html.LabelFor(s => s.Type, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EnumDropDownListFor(x => x.Type, "請選擇", new { id = "category", @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(s => s.AmountMoney, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(s => s.AmountMoney, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(s => s.AmountMoney) } })
                    @Html.ValidationMessageFor(s => s.AmountMoney, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(s => s.AccountDate, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(s => s.AccountDate, new { htmlAttributes = new { @class = "form-control", id = "date", placeholder = Html.DisplayNameFor(s => s.AccountDate) } })
                    @Html.ValidationMessageFor(s => s.AccountDate, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(s => s.remark, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextAreaFor(s => s.remark, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(s => s.remark, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-8 col-sm-4">
                    <button type="submit" id="btnSubmit" class="btn btn-default">送出</button>
                    @*<button id="btnWait" disabled class="btn btn-default">
                        <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate">
                        </span> Waiting.....
                    </button>*@
                </div>
            </div>
          </div>
      }

          <div class="row" id="divlistdata">
              <div class="col-md-12">
                    @Html.Action("ListAccountData")
              </div>
          </div>
